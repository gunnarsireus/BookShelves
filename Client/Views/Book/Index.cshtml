@using System.Security.Principal
@model Client.Models.BookViewModel.BookViewModel
@{
    ViewData["Title"] = "Shelf books";
}
<h2>Shelf books</h2>

<script type="text/javascript">
    function Showbooks() {
        window.location = "/Book/Index/" + $('#booksForShelf').val();
    }
</script>
@{
    if (ViewBag.ShelfId != null)
    {
        <table>
            <tr class="page-header">books for shelves</tr>
            <tr>
                <td>
                    @Html.DropDownList("booksForShelf", Model.ShelfSelectList, new { onchange = "Showbooks()" })
                </td>
            </tr>
        </table>
        <p>
            <a asp-action="Create" asp-route-id="@ViewBag.ShelfId">Create new vehicle</a>
        </p>
    }
    else
    {
        <p>shelves missing</p>
    }
}
<div class="row">
    <div class="col-lg-8">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Books[0].ISBN)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Books[0].Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Books[0].CreationTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Books[0].InShelf)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Books)
                {
                    var iidd = item.Id + "_2";

                    <tr id="@iidd">
                        <td>
                            @Html.DisplayFor(modelItem => item.ISBN)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreationTime)
                        </td>
                        @{ var cl = item.InShelf ? "" : "alert-danger";}
                        <td class="@cl">
                            @Html.DisplayFor(modelItem => item.InShelfNotInShelf)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Loan</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>  }
            </tbody>
        </table>
    </div>
    <div class="col-lg-4">
        <p class="alert-info">All books for a particular Shelf are shown here. In the drop-down menu, you can choose another Shelf and see its books. Note how the status changes randomly every 10 seconds.
            <br/><br/>
            If you press F12 and select "Console" you can see when the status changes for each book using Javascript in the browser<br /><br />If you press F12 and select "Console" you can see when the status changes for each book using Javascript in the browser.</p>
    </div>
</div>
