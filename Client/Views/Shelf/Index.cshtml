@model Client.Models.ShelfViewModel.ShelfViewModel

@{
    ViewData["Title"] = "Shelf";
}

<h2>Shelf</h2>

<p>
    <a asp-action="Create">Create new Shelf</a>
</p>
<div class="row">
    <div class="col-lg-8">
        <table class="table">
            <thead>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.Shelves[0].Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Shelves[0].Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Shelves[0].CreationTime)
                </th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Shelves)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreationTime)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="col-lg-4">
        <p class="alert-info">All shelves registered in the database are shown here. You can also create new shelves as well as remove shelves. To see which vehicle belong to a certain Shelf, go to Shelf books.</p>
    </div>
</div>